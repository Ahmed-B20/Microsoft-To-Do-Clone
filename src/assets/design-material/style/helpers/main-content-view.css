.view-content-container {
    height: 100vh;
    position: relative;
    padding: 10px 0;
}

.view-content-container .title {
    position: absolute;
    top: 0;
    left: 40px;
    right: 50px;
    background-color: #5f73c1f0;
    /* height: 100px;
    display: flex;
    align-items: center;
    justify-content: space-between; */
    color: white;
    font-weight: bolder;
    padding: 30px 0;
}

.view-content-container .tasks {
    margin-right: 5px;
    overflow-y: auto;
    padding: 103px 40px 105px;
    height: 100%;
    display: flex;
    flex-direction: column;
    gap: 5px;
}

.view-content-container .tasks li {
    background-color: white;
    border-radius: 3px;
    padding: 15px 10px;
    font-size: 15px;
    display: flex;
    align-items: center;
    gap: 10px;
    cursor: pointer;
}

.view-content-container .tasks li .check {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #5f73c1;
    cursor: pointer;
}

.view-content-container .tasks li.complete .check {
    background-color: #f4f4f4;
}


.view-content-container .tasks li .check img {
    visibility: hidden;
    transition: all 0.2s linear;
    width: 10px;
}

.view-content-container .tasks li .check:hover img,
.view-content-container .tasks li.complete .check img {
    visibility: visible;
}

.view-content-container .tasks li .task-name.complete {
    text-decoration: line-through;
}

.view-content-container .tasks li .important-toggle {
    margin-left: auto;
    width: 20px;
}

.view-content-container .tasks::-webkit-scrollbar {
    width: 5px;
}

.view-content-container .tasks::-webkit-scrollbar-track {
    background: #5f73c1;
}

.view-content-container .tasks::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 3px;
}


.view-content-container .add-task {
    position: absolute;
    bottom: 0;
    left: 40px;
    right: 50px;
    padding: 10px 0 45px 0;
    background-color: #5f73c1f0;
    /* position: relative; */
}

.view-content-container .add-task .add-task-container {
    width: 100%;
    height: 100%;
    background-color: white;
    border-radius: 3px;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 5px 10px;
    border: 1px solid #5f73c1;
}

.view-content-container .add-task .add-task-container span {
    display: flex;
    align-items: center;
    justify-content: center;
}

.view-content-container .add-task .add-task-container span.active img {
    cursor: pointer;
}

.view-content-container .add-task .add-task-container span img {
    width: 20px;
}

.view-content-container .add-task .add-task-container input {
    height: 100%;
    width: 100%;
    padding: 8px;
    flex-grow: 1;
    font-size: 16px;
    caret-color: #5f73c1;
}

.view-content-container .add-task .add-task-container.error {
    border-color: red;
    animation: shake 0.1s linear;
}

@keyframes shake {
    0% {
        transform: translateX(-10px);
    }

    50% {
        transform: translateX(10px);
    }

    100% {
        transform: translateX(0);
    }
}

.tasks-transition-move,
.tasks-transition-enter-active,
.tasks-transition-leave-active {
    transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);
}

/* 2. declare enter from and leave to state */
.tasks-transition-enter-from,
.tasks-transition-leave-to {
    opacity: 0;
    transform: scaleY(0.01) translate(30px, 0);
}

/* 3. ensure leaving items are taken out of layout flow so that moving
      animations can be calculated correctly. */
.tasks-transition-leave-active {
    position: absolute;
}